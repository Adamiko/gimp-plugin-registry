#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

CFLAGS = -Wall -g
ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

PLUGINS = $(shell find . -mindepth 2 -maxdepth 2 -name Makefile | \
                  sed 's,^\./,,g;s,/.*,,g;' | \
                  sort)


build: build-stamp

build-stamp: 
	dh_testdir

	for plugin in $(PLUGINS); do \
	    $(MAKE) -C $$plugin CFLAGS="$(CFLAGS)" build  || exit 1 ;\
	done

	touch $@

clean: 
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	-for plugin in $(PLUGINS); do \
	    $(MAKE) -C $$plugin clean ;\
	done

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	for plugin in $(PLUGINS); do \
		$(MAKE) -C $$plugin DESTDIR=$(CURDIR)/debian/gimp-plugin-registry \
                                    PLUGINBINDIR=/usr/lib/gimp/2.0/plug-ins  \
	                            PLUGINSCRIPTDIR=/usr/share/gimp/2.0/scripts \
                                    install || exit 1 ;\
	        if [ -r $$plugin/README ]; then \
	            dh_install $$plugin/README usr/share/doc/gimp-plugin-registry/$$plugin ;\
	        fi ;\
	done


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure \
        update-all update-copyright update-description update-url-md5 watch build-tgz


#### the following stuff is not needed to build the package,
#### it's only for lazy maintainers.

update-all:
	debian/rules update-url-md5
	debian/rules update-description
	debian/rules update-copyright

update-copyright:
	( cat debian/copyright.in ;\
	  for plugin in $(PLUGINS); do \
	      echo; echo ;\
	      echo '************************************************************' ;\
	      echo "$$plugin:" ;\
	      echo ;\
	      echo "The plugin was downloaded from:" ;\
	      cat $$plugin/url ;\
	      echo ;\
	      cat $$plugin/copyright ;\
	  done ;\
	) > debian/copyright

update-description:
	( cat debian/control.in ;\
	  for plugin in $(PLUGINS); do \
	    cat $$plugin/description ;\
	  done ;\
	) > debian/control

update-url-md5:
	for plugin in $(PLUGINS); do \
	    wget -q -O - `cat $$plugin/url` | md5sum | awk '{print $$1}' > $$plugin/url.md5sum ;\
	done

watch:
	for plugin in $(PLUGINS); do \
	    url=`cat $$plugin/url` ;\
	    if ! [ `wget -q -O - $$url | md5sum | awk '{print $$1}'` = `cat $$plugin/url.md5sum` ]; then \
	        echo "$$plugin changed! $$url" ;\
	    fi ;\
	done

build-tgz:
	set -e ;\
	version=$$(dpkg-parsechangelog  | grep '^Version' | sed 's,.* ,,g;s,-.*,,g') ;\
	exp_dir="gimp-plugin-repository_$$version.orig" ;\
	svn export . ../build-area/$$exp_dir ;\
	cd ../build-area ;\
	rm -rf $$exp_dir/debian ;\
	tar cf - $$exp_dir | gzip -9 > $$exp_dir.tar.gz ;\
	mv $$exp_dir.tar.gz ../tarballs ;\
